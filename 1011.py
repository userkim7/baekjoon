#1011
#우현이는 어린 시절, 지구 외의 다른 행성에서도 인류들이 살아갈 수 있는 미래가 오리라 믿었다. 그리고 그가 지구라는 세상에 발을 내려 놓은 지 23년이 지난 지금, 세계 최연소 ASNA 우주 비행사가 되어 새로운 세계에 발을 내려 놓는 영광의 순간을 기다리고 있다.
#그가 탑승하게 될 우주선은 Alpha Centauri라는 새로운 인류의 보금자리를 개척하기 위한 대규모 생활 유지 시스템을 탑재하고 있기 때문에, 그 크기와 질량이 엄청난 이유로 최신기술력을 총 동원하여 개발한 공간이동 장치를 탑재하였다. 하지만 이 공간이동 장치는 이동 거리를 급격하게 늘릴 경우 기계에 심각한 결함이 발생하는 단점이 있어서, 이전 작동시기에 k광년을 이동하였을 때는 k-1 , k 혹은 k+1 광년만을 다시 이동할 수 있다. 예를 들어, 이 장치를 처음 작동시킬 경우 -1 , 0 , 1 광년을 이론상 이동할 수 있으나 사실상 음수 혹은 0 거리만큼의 이동은 의미가 없으므로 1 광년을 이동할 수 있으며, 그 다음에는 0 , 1 , 2 광년을 이동할 수 있는 것이다. ( 여기서 다시 2광년을 이동한다면 다음 시기엔 1, 2, 3 광년을 이동할 수 있다. )
#김우현은 공간이동 장치 작동시의 에너지 소모가 크다는 점을 잘 알고 있기 때문에 x지점에서 y지점을 향해 최소한의 작동 횟수로 이동하려 한다. 하지만 y지점에 도착해서도 공간 이동장치의 안전성을 위하여 y지점에 도착하기 바로 직전의 이동거리는 반드시 1광년으로 하려 한다.
#김우현을 위해 x지점부터 정확히 y지점으로 이동하는데 필요한 공간 이동 장치 작동 횟수의 최솟값을 구하는 프로그램을 작성하라.

##입력의 첫 줄에는 테스트케이스의 개수 T가 주어진다. 각각의 테스트 케이스에 대해 현재 위치 x 와 목표 위치 y 가 정수로 주어지며, x는 항상 y보다 작은 값을 갖는다. (0 ≤ x < y < 231)
##각 테스트 케이스에 대해 x지점으로부터 y지점까지 정확히 도달하는데 필요한 최소한의 공간이동 장치 작동 횟수를 출력한다.

for i in range(int(input())):
    x,y=map(int,input().split())
    if y-x==1 or y-x==2: #1|2회는 반드시 1|2광년 이동함
        print(y-x)
    else: #강제적 움직임 이후에도 간격이 남았을 경우
        d=y-x-2 #강제적 움직임 이외의 거리d
        t=2 #이미 움직인 횟수
        n=2 #이번 회차에 움직일 수 있는 최대 거리
        l=0 #지금까지 움직일 수 있는 최대 거리l
        while l<d: #d보다 더 많이 움직일 수 있는 것이 가능할때까지
            if t%2==1: #수열의 규칙에 따라 움직일 수 있는 최대 길이 연장
                l+=n
                n+=1
            else:
                l+=n
            t+=1
        print(t)

##처음 1|2회는 반드시 1광년 움직여야함
##2회차에서 양쪽에서의 속력v,v'은 둘다 1임
##최소 횟수를 유지하기 위해서는 다음 회차에서 v|v'을 +0|+1만큼 증가시킬 수 있음
##v가 +1 된다면 그 다음은 v'에 +0|+1해야함->v=1+1+1,v'=1이면 조건에 성립하지 않음
##위 조건대로 움직임을 증가시키면
##3(회차):+2(칸max) 4:2+2 5:4+3 6:7+3 7:10+4...
##과 같이 그 회차에 변화할 v|v'+1만큼 l이 증가함
##그 회차에서 움직일 수 있는 최소거리는 최단회차에 조건에 부합하지 않으므로 고려할 필요x
##따라서 최소회차는 l>d가 되는 회차가 됨
###수열
